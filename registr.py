from telebot import types
from handler import clear_chat_history_optimized
from datetime import datetime
import time

user_temp_data = {}
bot = None
db = None

def init_bot(bot_instance, db_instance=None):
    global bot, db
    bot = bot_instance
    db = db_instance

    @bot.callback_query_handler(func=lambda call: call.data == "btn_new_part")
    def callback_mew_part(call):
        from config import MESSAGES, REGULATION_URL
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("–î–∞—é —Å–æ–≥–ª–∞—Å–∏–µ", callback_data="soglasen"))
        keyboard.add(types.InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="callback_start"))
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=MESSAGES['consent_text']+f"\n'–° –ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ –∏–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ {REGULATION_URL}", 
            reply_markup=keyboard)
    
    @bot.callback_query_handler(func=lambda call: call.data == "soglasen")
    def callback_mew_part(call):
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        clear_chat_history_optimized(call.message, 1)

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="callback_start"))

        message1 = bot.send_message(
            call.message.chat.id,
            '–í–≤–µ–¥–∏—Ç–µ –§–ò–û —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
            reply_markup=keyboard)
        
        user_message_id = message1.message_id
        bot.register_next_step_handler(call.message, FIO, user_message_id)

    @bot.callback_query_handler(func=lambda call: call.data in ["24_oct", "25_oct", "24-25_oct"])
    def callback_date_fest(call):
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        user_id = call.from_user.id 
        data = user_temp_data[user_id]

        keyboard = types.InlineKeyboardMarkup()

        if call.data == "24_oct":
            data.update({'date_fest': '24 –æ–∫—Ç—è–±—Ä—è'})
            user_temp_data[user_id] = data
            keyboard.add(types.InlineKeyboardButton("12:00", callback_data="12:00"),types.InlineKeyboardButton("13:00", callback_data="13:00"), types.InlineKeyboardButton("14:00", callback_data="14:00"))
            keyboard.add(types.InlineKeyboardButton("15:00", callback_data="15:00"),types.InlineKeyboardButton("16:00", callback_data="16:00"), types.InlineKeyboardButton("17:00", callback_data="17:00"))
            keyboard.add(types.InlineKeyboardButton("18:00", callback_data="18:00"),types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="date_fest_back"))
            bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è.",
            reply_markup=keyboard)
        elif call.data == "25_oct":
            data.update({'date_fest': '25 –æ–∫—Ç—è–±—Ä—è'})
            user_temp_data[user_id] = data
            keyboard.add(types.InlineKeyboardButton("12:00", callback_data="12:00"),types.InlineKeyboardButton("13:00", callback_data="13:00"), types.InlineKeyboardButton("14:00", callback_data="14:00"))
            keyboard.add(types.InlineKeyboardButton("15:00", callback_data="15:00"),types.InlineKeyboardButton("16:00", callback_data="16:00"), types.InlineKeyboardButton("17:00", callback_data="17:00"))
            keyboard.add(types.InlineKeyboardButton("18:00", callback_data="18:00"),types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="date_fest_back"))
            bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è.",
            reply_markup=keyboard)
        elif call.data == "24-25_oct":
            data.update({'date_fest': '24-25 –æ–∫—Ç—è–±—Ä—è'})
            user_temp_data[user_id] = data
            keyboard.add(types.InlineKeyboardButton("12:00", callback_data="12:0024"),types.InlineKeyboardButton("13:00", callback_data="13:0024"), types.InlineKeyboardButton("14:00", callback_data="14:0024"))
            keyboard.add(types.InlineKeyboardButton("15:00", callback_data="15:0024"),types.InlineKeyboardButton("16:00", callback_data="16:0024"), types.InlineKeyboardButton("17:00", callback_data="17:0024"))
            keyboard.add(types.InlineKeyboardButton("18:00", callback_data="18:0024"),types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="date_fest_back"))
            bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è 24 –æ–∫—Ç—è–±—Ä—è.",
            reply_markup=keyboard)
 

    @bot.callback_query_handler(func=lambda call: call.data in ["date_fest_back"])
    def callback_date_fest_back(call):
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        user_id = call.from_user.id 
        print(user_id)
        data = user_temp_data[user_id]
        data.update({'time_fest': ''})
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("24 –æ–∫—Ç—è–±—Ä—è", callback_data="24_oct"))
        keyboard.add(types.InlineKeyboardButton("25 –æ–∫—Ç—è–±—Ä—è", callback_data="25_oct"))
        keyboard.add(types.InlineKeyboardButton("24-25 –æ–∫—Ç—è–±—Ä—è", callback_data="24-25_oct"))
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="soglasen"))
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å, –∫–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ—Å–µ—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.",
            reply_markup=keyboard)
    @bot.callback_query_handler(func=lambda call: call.data in ["12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", 'back_gender'])
    def callback_time_fest(call):
        user_id = call.from_user.id 
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        print(user_id)
        data = user_temp_data[user_id]
        if call.data == 'back_gender':
            pass
        elif len(list(data.get('time_fest', ''))) == 5:
            data.update({'time_fest': data['time_fest']+";"+call.data})
        else:
            data.update({'time_fest': call.data})

        user_temp_data[user_id] = data

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("–ú—É–∂—Å–∫–æ–π", callback_data="male"))
        keyboard.add(types.InlineKeyboardButton("–ñ–µ–Ω—Å–∫–∏–π", callback_data="female"))
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="time_back"))
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª.",
            reply_markup=keyboard)
    @bot.callback_query_handler(func=lambda call: call.data in ["12:0024", "13:0024", "14:0024", "15:0024", "16:0024", "17:0024", "18:0024"])
    def callback_time_fest2(call):
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        user_id = call.from_user.id 
        data = user_temp_data[user_id]

        keyboard = types.InlineKeyboardMarkup()
        data.update({'time_fest': call.data[:5]})
        user_temp_data[user_id] = data
        keyboard.add(types.InlineKeyboardButton("12:00", callback_data="12:00"),types.InlineKeyboardButton("13:00", callback_data="13:00"), types.InlineKeyboardButton("14:00", callback_data="14:00"))
        keyboard.add(types.InlineKeyboardButton("15:00", callback_data="15:00"),types.InlineKeyboardButton("16:00", callback_data="16:00"), types.InlineKeyboardButton("17:00", callback_data="17:00"))
        keyboard.add(types.InlineKeyboardButton("18:00", callback_data="18:00"),types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="date_fest_back"))
        bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è 25 –æ–∫—Ç—è–±—Ä—è.",
        reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: call.data in ["male", "female"])
    def callback_male(call):
        user_id = call.from_user.id
        bot.clear_step_handler_by_chat_id(call.message.chat.id) 
        print(user_id)
        data = user_temp_data[user_id]
        if call.data == "male":
            data.update({'gender': "–ú—É–∂—Å–∫–æ–π"})
        elif call.data == "female":
            data.update({'gender': "–ñ–µ–Ω—Å–∫–∏–π"})

        user_temp_data[user_id] = data

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_gender'))

        message1 = bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text='–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î.–ú–ú.–ì–ì–ì–ì".',
            reply_markup=keyboard)
        user_message_id = message1.message_id
        bot.register_next_step_handler(call.message, date_of_birth, data, user_message_id)

    @bot.callback_query_handler(func=lambda call: call.data in ["time_back"])
    def callback_time_fest_back(call):
        user_id = call.from_user.id
        bot.clear_step_handler_by_chat_id(call.message.chat.id) 
        data = user_temp_data[user_id]

        keyboard = types.InlineKeyboardMarkup()

        if data['date_fest'] == "24 –æ–∫—Ç—è–±—Ä—è":
            keyboard.add(types.InlineKeyboardButton("12:00", callback_data="12:00"),types.InlineKeyboardButton("13:00", callback_data="13:00"), types.InlineKeyboardButton("14:00", callback_data="14:00"))
            keyboard.add(types.InlineKeyboardButton("15:00", callback_data="15:00"),types.InlineKeyboardButton("16:00", callback_data="16:00"), types.InlineKeyboardButton("17:00", callback_data="17:00"))
            keyboard.add(types.InlineKeyboardButton("18:00", callback_data="18:00"),types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="date_fest_back"))
            bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è.",
            reply_markup=keyboard)
        elif data['date_fest'] == "25 –æ–∫—Ç—è–±—Ä—è":
            keyboard.add(types.InlineKeyboardButton("12:00", callback_data="12:00"),types.InlineKeyboardButton("13:00", callback_data="13:00"), types.InlineKeyboardButton("14:00", callback_data="14:00"))
            keyboard.add(types.InlineKeyboardButton("15:00", callback_data="15:00"),types.InlineKeyboardButton("16:00", callback_data="16:00"), types.InlineKeyboardButton("17:00", callback_data="17:00"))
            keyboard.add(types.InlineKeyboardButton("18:00", callback_data="18:00"),types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="date_fest_back"))
            bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è.",
            reply_markup=keyboard)
        elif data['date_fest'] == "24-25 –æ–∫—Ç—è–±—Ä—è":

            keyboard.add(types.InlineKeyboardButton("12:00", callback_data="12:0024"),types.InlineKeyboardButton("13:00", callback_data="13:0024"), types.InlineKeyboardButton("14:00", callback_data="14:0024"))
            keyboard.add(types.InlineKeyboardButton("15:00", callback_data="15:0024"),types.InlineKeyboardButton("16:00", callback_data="16:0024"), types.InlineKeyboardButton("17:00", callback_data="17:0024"))
            keyboard.add(types.InlineKeyboardButton("18:00", callback_data="18:0024"),types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="date_fest_back"))
            bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Ñ–µ—Å—Ç–∏–≤–∞–ª—è 24 –æ–∫—Ç—è–±—Ä—è.",
            reply_markup=keyboard)
    @bot.callback_query_handler(func=lambda call: call.data in ["status_parent", "status_baby", "status_teacher", "status_student", "status_big"])
    def callback_status(call):
        user_id = call.from_user.id
        bot.clear_step_handler_by_chat_id(call.message.chat.id) 
        data = user_temp_data[user_id]

        if call.data == "status_parent":
            data.update({'status': '–†–æ–¥–∏—Ç–µ–ª—å'})
        elif call.data == "status_baby":
            data.update({'status': '–†–µ–±–µ–Ω–æ–∫'})
        elif call.data == "status_teacher":
            data.update({'status': '–£—á–∏—Ç–µ–ª—å'})
        elif call.data == "status_student":
            data.update({'status': '–°—Ç—É–¥–µ–Ω—Ç'})
        elif call.data == "status_big":
            data.update({'status': '–í–∑—Ä–æ—Å–ª—ã–π'})

        user_temp_data[user_id] = data          
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="status_back"))
        message1 = bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ä–µ–≥–∏–æ–Ω, –Ω–∞–ø—Ä–∏–º–µ—Ä, "–¢–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å".',
            reply_markup=keyboard)
        user_message_id = message1.message_id
        bot.register_next_step_handler(call.message, region, data, user_message_id)
    @bot.callback_query_handler(func=lambda call: call.data in ["status_back"])
    def callback_status_back(call): 
        user_id = call.from_user.id
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        data = user_temp_data[user_id]
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("–†–æ–¥–∏—Ç–µ–ª—å", callback_data="status_parent"))
        keyboard.add(types.InlineKeyboardButton("–†–µ–±–µ–Ω–æ–∫", callback_data="status_baby"))
        keyboard.add(types.InlineKeyboardButton("–ü–µ–¥–∞–≥–æ–≥", callback_data="status_teacher"))
        keyboard.add(types.InlineKeyboardButton("–°—Ç—É–¥–µ–Ω—Ç", callback_data="status_student"))
        keyboard.add(types.InlineKeyboardButton("–í–∑—Ä–æ—Å–ª—ã–π", callback_data="status_big"))
        if data['gender'] == "–ú—É–∂—Å–∫–æ–π":
            keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="male"))
        elif data['gender'] == "–ñ–µ–Ω—Å–∫–∏–π":
            keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="female"))
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å.", 
            reply_markup=keyboard )  
def FIO(message, user_message_id):
    bot.delete_message(message.chat.id, user_message_id)
    bot.delete_message(message.chat.id, message.message_id)

    if len(message.text.split())<2:
            message = bot.send_message(message.chat.id, text="–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!\n–í–≤–µ–¥–∏—Ç–µ –§–ò–û –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á".format(message.from_user))
            user_message_id = message.message_id
            bot.register_next_step_handler(message, FIO, user_message_id)
    else:
        words = message.text.split()
        for word in words:
            if not word[0].isupper():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∑–∞–≥–ª–∞–≤–Ω–∞—è
                message = bot.send_message(message.chat.id, text="–ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã!\n–í–≤–µ–¥–∏—Ç–µ –§–ò–û –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á")
                user_message_id = message.message_id
                bot.register_next_step_handler(message, FIO, user_message_id)
                return
        data = {"fio": message.text}
        user_id = message.from_user.id
        print(user_id)
        user_temp_data[user_id] = data

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("24 –æ–∫—Ç—è–±—Ä—è", callback_data="24_oct"))
        keyboard.add(types.InlineKeyboardButton("25 –æ–∫—Ç—è–±—Ä—è", callback_data="25_oct"))
        keyboard.add(types.InlineKeyboardButton("24-25 –æ–∫—Ç—è–±—Ä—è", callback_data="24-25_oct"))
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="soglasen"))
        bot.send_message(
            message.chat.id,
            '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å, –∫–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ—Å–µ—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.',
            reply_markup=keyboard)


def date_of_birth(message, data, user_message_id):
    user_id = message.from_user.id
    bot.delete_message(message.chat.id, user_message_id)
    bot.delete_message(message.chat.id, message.message_id)
    try:
        birth_date = datetime.strptime(message.text, "%d.%m.%Y")
        current_date = datetime.now()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥–æ–¥ –±–æ–ª—å—à–µ 1900
        if birth_date.year <= 1900:
            message1 = bot.send_message(
                message.chat.id, 
                '–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 1900!\n'
                '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î.–ú–ú.–ì–ì–ì–ì".'
            )
            user_message_id = message1.message_id
            bot.register_next_step_handler(message, date_of_birth, data, user_message_id)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –Ω–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–π
        if birth_date > current_date:
            message1 = bot.send_message(
                message.chat.id, 
                '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã!\n'
                '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î.–ú–ú.–ì–ì–ì–ì".'
            )
            user_message_id = message1.message_id
            bot.register_next_step_handler(message, date_of_birth, data, user_message_id)
            return
        
        data.update({"date_of_birth": message.text})

        user_temp_data[user_id] = data
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("–†–æ–¥–∏—Ç–µ–ª—å", callback_data="status_parent"))
        keyboard.add(types.InlineKeyboardButton("–†–µ–±–µ–Ω–æ–∫", callback_data="status_baby"))
        keyboard.add(types.InlineKeyboardButton("–ü–µ–¥–∞–≥–æ–≥", callback_data="status_teacher"))
        keyboard.add(types.InlineKeyboardButton("–°—Ç—É–¥–µ–Ω—Ç", callback_data="status_student"))
        keyboard.add(types.InlineKeyboardButton("–í–∑—Ä–æ—Å–ª—ã–π", callback_data="status_big"))
        if data['gender'] == "–ú—É–∂—Å–∫–æ–π":
            keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="male"))
        elif data['gender'] == "–ñ–µ–Ω—Å–∫–∏–π":
            keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="female"))
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å.", reply_markup=keyboard )

    except ValueError:
        message1 = bot.send_message(message.chat.id, text='–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î.–ú–ú.–ì–ì–ì–ì".')
        user_message_id = message1.message_id
        bot.register_next_step_handler(message, date_of_birth, data, user_message_id)

def region(message, data, user_message_id):
    user_id = message.from_user.id
    bot.delete_message(message.chat.id, user_message_id)
    bot.delete_message(message.chat.id, message.message_id)
    data.update({'region': message.text})
    user_temp_data[user_id] = data
    keyboard = types.InlineKeyboardMarkup()
    if data['status'] == "–†–æ–¥–∏—Ç–µ–ª—å":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_parent'))
    elif data['status'] == "–†–µ–±–µ–Ω–æ–∫":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_baby'))
    elif data['status'] == "–ü–µ–¥–∞–≥–æ–≥":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_teacher'))
    elif data['status'] == "–°—Ç—É–¥–µ–Ω—Ç":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_student'))
    else:
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="status_big"))

    message1 = bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä, "–≥.–¢–æ–º—Å–∫".', reply_markup=keyboard)
    user_message_id = message1.message_id
    bot.register_next_step_handler(message, city, data, user_message_id)

def city(message, data, user_message_id):
    user_id = message.from_user.id
    bot.delete_message(message.chat.id, user_message_id)
    bot.delete_message(message.chat.id, message.message_id)
    data.update({'city': message.text})
    user_temp_data[user_id] = data

    keyboard = types.InlineKeyboardMarkup()
    if data['status'] == "–†–æ–¥–∏—Ç–µ–ª—å":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_parent'))
    elif data['status'] == "–†–µ–±–µ–Ω–æ–∫":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_baby'))
    elif data['status'] == "–ü–µ–¥–∞–≥–æ–≥":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_teacher'))
    elif data['status'] == "–°—Ç—É–¥–µ–Ω—Ç":
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='status_student'))
    else:
        keyboard.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="status_big"))

    message1 = bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "+79XXXXXXXXX".', reply_markup=keyboard)
    user_message_id = message1.message_id
    bot.register_next_step_handler(message, number, data, user_message_id)

def number(message, data, user_message_id):
    user_id = message.from_user.id
    registrator_id = message.from_user.id 
    bot.delete_message(message.chat.id, user_message_id)
    bot.delete_message(message.chat.id, message.message_id)
    if len(message.text) != 12 or not message.text.startswith('+79') or not message.text[3:].isdigit():
        user_message_id = message.message_id
        message = bot.send_message(message.chat.id, text='–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞!\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "+79XXXXXXXXX".')
        user_message_id = message.message_id
        bot.register_next_step_handler(message, number, data, user_message_id)
    else:
        data.update({"number": message.text, "telegram_id": user_id})
        print(data)
        if user_id in user_temp_data:
            if user_temp_data[user_id].get('processing'):
                bot.send_message(message.chat.id, "‚è≥ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
                return
        
        # –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞
        data.update({"number": message.text, "telegram_id": user_id, "processing": True})
        user_temp_data[user_id] = data
        
        if db:
            participant_id = db.save_participant(data, registrator_id)
            if participant_id:
                # –ü–†–û–í–ï–†–Ø–ï–ú, –ù–û–í–´–ô –õ–ò –£–ß–ê–°–¢–ù–ò–ö –ò–õ–ò –£–ñ–ï –°–£–©–ï–°–¢–í–û–í–ê–õ:
                existing_participant = db.get_participant_by_id(participant_id)
                if existing_participant and existing_participant['fio'].lower().strip() == data['fio'].lower().strip():
                    # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –§–ò–û
                    current_time = datetime.now()
                    registration_time = existing_participant['created_at']
                    
                    # –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±—ã–ª–∞ –¥–∞–≤–Ω–æ (–±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã –Ω–∞–∑–∞–¥)
                    if (current_time - registration_time).total_seconds() > 60:
                        success_text = f'‚ö†Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ —Å –§–ò–û "{data["fio"]}" —É–∂–µ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Ä–∞–Ω–µ–µ.\nüìã –ù–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞: {participant_id}'
                    else:
                        success_text = f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å!\nüìã –í–∞—à –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞: {participant_id}'
                else:
                    success_text = f'‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å!\nüìã –í–∞—à –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞: {participant_id}'
                
                print(f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ {data['fio']} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î —Å ID: {participant_id}")
            else:
                success_text = '‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ {data['fio']} –≤ –ë–î")
        else:
            success_text = '‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
            print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id in user_temp_data:
            del user_temp_data[user_id]
        
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="callback_start"))
        bot.send_message(message.chat.id, text=success_text, reply_markup=keyboard)

