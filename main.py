import telebot
from telebot import types
from config import TOKEN, MAIN_ADMIN, ADMINS, DATABASE_CONFIG, MESSAGES
import handler
import registr
from database import DatabaseManager
import sys
import time

bot = telebot.TeleBot(TOKEN)
db = None

@bot.message_handler(commands=['start'])
def start_handler(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    if user_id in ADMINS:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å", callback_data="btn_new_part"))
        keyboard.add(types.InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", callback_data="btn_search_part"))
        keyboard.add(types.InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="personal_cabinet"))
        keyboard.add(types.InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics"))
        keyboard.add(types.InlineKeyboardButton("üìä –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="download_data"))
        keyboard.add(types.InlineKeyboardButton("üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å", callback_data="answer_quest"))
        keyboard.add(types.InlineKeyboardButton("üìä –°–∫–∞—á–∞—Ç—å –±–∞–∑—É –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="download_data_ask"))
        keyboard.add(types.InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_message"))
        keyboard.add(types.InlineKeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing"))
        keyboard.add(types.InlineKeyboardButton("üöó –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è", callback_data="how_get"))
        keyboard.add(types.InlineKeyboardButton("‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="program"))
        bot.send_message(
            message.chat.id, 
            f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! {MESSAGES['welcome_admin']}", 
            reply_markup=keyboard
        )
    else:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å", callback_data="btn_new_part"))
        keyboard.add(types.InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="personal_cabinet"))
        keyboard.add(types.InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_quest"))
        keyboard.add(types.InlineKeyboardButton("üöó –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è", callback_data="how_get"))
        keyboard.add(types.InlineKeyboardButton("üåê –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç", callback_data="web_cite"))
        keyboard.add(types.InlineKeyboardButton("‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="program"))
        bot.send_message(
            message.chat.id, 
            f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! {MESSAGES['welcome_user']}", 
            reply_markup=keyboard
        )
@bot.callback_query_handler(func=lambda call: call.data == "callback_start")
def start_handler_callback(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    bot.clear_step_handler_by_chat_id(call.message.chat.id)
    user_id = call.from_user.id
    if user_id in ADMINS:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å", callback_data="btn_new_part"))
        keyboard.add(types.InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", callback_data="btn_search_part"))
        keyboard.add(types.InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="personal_cabinet"))
        keyboard.add(types.InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics"))
        keyboard.add(types.InlineKeyboardButton("üìä –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="download_data"))
        keyboard.add(types.InlineKeyboardButton("üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å", callback_data="answer_quest"))
        keyboard.add(types.InlineKeyboardButton("üìä –°–∫–∞—á–∞—Ç—å –±–∞–∑—É –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="download_data_ask"))
        keyboard.add(types.InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_message"))
        keyboard.add(types.InlineKeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing"))
        keyboard.add(types.InlineKeyboardButton("üöó –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è", callback_data="how_get"))
        keyboard.add(types.InlineKeyboardButton("‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="program"))

        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text = MESSAGES['welcome_admin2'], 
            reply_markup=keyboard
        )
    else:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å", callback_data="btn_new_part"))
        keyboard.add(types.InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="personal_cabinet"))
        keyboard.add(types.InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_quest"))
        keyboard.add(types.InlineKeyboardButton("üöó –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è", callback_data="how_get"))
        keyboard.add(types.InlineKeyboardButton("üåê –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç", callback_data="web_cite"))
        keyboard.add(types.InlineKeyboardButton("‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="program"))
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text = MESSAGES['welcome_user2'], 
            reply_markup=keyboard
        )
@bot.callback_query_handler(func=lambda call: call.data == "callback_start2")
def start_handler_callback2(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    bot.clear_step_handler_by_chat_id(call.message.chat.id)
    from handler import clear_chat_history_optimized
    clear_chat_history_optimized(call.message, 2)
    user_id = call.from_user.id
    if user_id in ADMINS:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å", callback_data="btn_new_part"))
        keyboard.add(types.InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", callback_data="btn_search_part"))
        keyboard.add(types.InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="personal_cabinet"))
        keyboard.add(types.InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics"))
        keyboard.add(types.InlineKeyboardButton("üìä –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="download_data"))
        keyboard.add(types.InlineKeyboardButton("üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å", callback_data="answer_quest"))
        keyboard.add(types.InlineKeyboardButton("üìä –°–∫–∞—á–∞—Ç—å –±–∞–∑—É –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="download_data_ask"))
        keyboard.add(types.InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_message"))
        keyboard.add(types.InlineKeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing"))
        keyboard.add(types.InlineKeyboardButton("üöó –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è", callback_data="how_get"))
        keyboard.add(types.InlineKeyboardButton("‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="program"))

        bot.send_message(
            chat_id=call.message.chat.id,
            text = MESSAGES['welcome_admin2'], 
            reply_markup=keyboard
        )
    else:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å", callback_data="btn_new_part"))
        keyboard.add(types.InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="personal_cabinet"))
        keyboard.add(types.InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_quest"))
        keyboard.add(types.InlineKeyboardButton("üöó –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è", callback_data="how_get"))
        keyboard.add(types.InlineKeyboardButton("üåê –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç", callback_data="web_cite"))
        keyboard.add(types.InlineKeyboardButton("‚ú® –ü—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="program"))
        bot.send_message(
            chat_id=call.message.chat.id,
            text = MESSAGES['welcome_admin2'], 
            reply_markup=keyboard
        )
def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    global db
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∫–æ–Ω—Ñ–∏–≥–∞ –∏ —É–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—É–ª–æ–º
        db_config = {
            'host': DATABASE_CONFIG['host'],
            'database': DATABASE_CONFIG['database'], 
            'user': DATABASE_CONFIG['user'],
            'password': DATABASE_CONFIG['password'],
            'port': DATABASE_CONFIG['port']
        }
        
        db = DatabaseManager(**db_config)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    global db
    
    print("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("üíæ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    if not init_database():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        sys.exit(1)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    print("üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    registr.init_bot(bot, db)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –æ–±—ä–µ–∫—Ç–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
    handler.init_main_menu(bot, registr, db)
    handler.register_main_menu_handlers(bot)
    
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    print(f"üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {ADMINS}")
    print(f"üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {DATABASE_CONFIG['database']} –Ω–∞ {DATABASE_CONFIG['host']}")
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    while True:
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        try:
            bot.infinity_polling(
                timeout=60, 
                long_polling_timeout=60,
                skip_pending=True,
                none_stop=True
            )
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ polling: {e}")
            time.sleep(5)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
            continue
        finally:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
            if db:
                db.close_connection()
            print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")